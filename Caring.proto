syntax = "proto2";
package Caring;
option java_package = "com.ls.appserver.iot.health.vo";
option java_outer_classname = "Caring";


//通信模式类似与c/s架构，app作为c, 手表作为s。
//所有设置数据到手表是以set开头，当手表回数据到app时是以r开头。当app要主动获取时是以get开头。_t代表的是type。


//手机信息下发给手表    
message set_device_info_t {//
	required uint32 m_phonemodel		= 1; //手机型号。0：ios，1:android  
	required string m_systemversion		= 2; //app版本//YJ:       
	required string m_appversion		= 3; //手机的系统版本//YJ:
	required uint32	m_language			= 4;//语言。1:英文，2:中文
	required uint32	m_uid				= 6;//用户uid
}


//设备信息
message r_bind_device_t{
	required bytes m_projno			= 1;
	required uint32 m_hwversion		= 2;
	required bytes m_fwversion		= 3;
	required uint32 m_fontversion	= 4;
	required uint32 m_sdversion		= 5;
	required uint32 m_uiversion		= 6;
	required uint32 m_devicesn		= 7;
	required uint32 m_devicename	= 8;
	required uint32 m_battvalue		= 9; 
	required uint32 m_devicemac		= 10;
	required uint32 m_bind_operate	= 11;
	required uint32	m_power			= 12;
	required uint32	m_deviceimei	= 13;
	required uint32	m_deviceid		= 14;
}

//获取设备信息
message get_device_info_t {
	required bytes m_projno			= 1;
	required uint32 m_hwversion		= 2;
	required bytes m_fwversion		= 3;
	required uint32 m_fontversion	= 4;
	required uint32 m_sdversion		= 5;
	required uint32 m_uiversion		= 6;
	required uint32 m_devicesn		= 7;
	required uint32 m_devicename	= 8;
	required uint32 m_battvalue		= 9;
	required uint32 m_devicemac		= 10;
	repeated uint32 m_deviceid 		= 11;
	required uint32	m_deviceimei	= 12;

}

//set 鉴权值
message set_auth_t{
	required uint32 m_value = 1;
	required string m_domain = 2;//YJ： 40字节
}


//用户信息
message set_user_info_t{
	required uint32 m_userid				= 1;
	required uint32 m_gender			= 2;
	required uint32 m_age				= 3;
	required uint32 m_height			= 4;
	required uint32 m_weight			= 5;
	required uint32 m_wearstyle			= 6;

}


//设置心率采样间隔
message set_hr_sample_slot_t{
	required uint32 m_hr_slot		= 1;
}


//手表设置
message set_watch_setting_t{
	required uint32 m_longsit_duration		= 1;//13800000000		设置久坐提醒判断的间隔 (单位：1min)
	required uint32 m_start_time			= 2;//15:00	string	小时:高16bit 分钟：低16bit
	required uint32 m_end_time				= 3;//string	小时:高16bit 分钟：低16bit
	required uint32 m_nodisturb_state		= 4;//	勿扰模式开关
	required uint32 m_longsit_state			= 5;//久坐提醒开关
	
	required uint32 m_flip_wrist_state		= 6;//抬腕亮屏状态
	required uint32 m_bright_screen_time		= 7;//亮屏时长
	
	required uint32 m_noon_nodisturb_state 		= 8;//中午休息免打扰状态
	required uint32 m_nodisturb_time_start			= 9;//勿扰模式开始时间
	required uint32 m_nodisturb_time_end			= 10;//勿扰模式结束时间
	
	
		
		
}


//闹钟List
message set_alarms_t{//YJ:最多8个闹钟
	repeated alarm_t alarms = 1;
}
//闹钟
message alarm_t{
	required bytes 		m_alarm1_cfg 			= 1;//YJ：一个byte就可以了，不需要bytes？
	required uint32		m_alarm1_hour 			= 2;
	required uint32		m_alarm1_min	 		= 3;
	required string		m_alarm1_name	 		= 4;//YJ:最长长度

}


//国家信息
message set_country_info_t{
	required uint32 m_country_code			= 1; //国家码。86
	required uint32 m_country_timezone		= 2; //时区 8，最高为0代表正时区。1代表负时区
}


//内置表盘设置
message set_ui_style_t{
	required uint32 	m_ui_style			= 1;
	required uint32 	m_dial_clock		= 2;	
}


//设置时间制式
message set_time_format_t{
	required uint32 	m_time_format			= 1;
}


//设置公英制
message set_metric_inch_t{
	required uint32 	m_metric_inch  			= 1;
}


//设置心率预警值
message set_hr_warning_t{
	required uint32 	m_hr_upper 				= 1;
	required uint32 	m_hr_lower				= 2;
	required uint32 	m_bp_upper				= 3;
	required uint32 	m_bp_lower				= 4;
	required uint32     m_detect_state          = 5;
}

//异常提醒
message set_abnormal_warning_t {
    required uint32 m_warning_type              = 1; //1 心率预警，2:跌倒预警
    required uint32 m_time_second             	= 2;
    required uint32 m_warning_longitude         = 3;
    required bytes 	m_warning_latitude          = 4;
}




//----------------------------------------------
//上传健康数据
message r_get_health_data_t{
	required uint32		m_err_code			= 1;
	required uint32		m_sn				= 2;//YJ:放什么数据？   长度1   sn = ffff 就是结束 65535
	optional bytes      m_data				= 3;//YJ:放什么数据？   在4G 上没有用。在蓝牙上 根据DN 标识做data拼接 
	
	optional r_get_health_step_t  step         = 4; //步数
	optional r_get_health_hrm_t   hrm          = 5;  //心率
	optional r_get_health_bp_t    bp		   = 6;  //血压
	optional r_get_health_sleep_t sleep        = 7;  //睡眠
	optional r_get_health_spo2_t  spo2         = 8;  //血氧
}


// 历史步数
message r_get_health_step_t{
	required uint32		totalSteps			= 1;
	required uint64		totalDistance		= 2;
	required uint32		totalKcal			= 3;
	required uint32     duration			= 4;
	repeated uint32  	stepDetails			= 5;
	required uint32     recordDate 			= 6;
}
// 历史心率
message r_get_health_hrm_t{
	required uint32		maxHeartRate			= 1;
	required uint32		minHeartRate			= 2;
	required uint32		averageHeartRate		= 3;
	repeated uint32 	hrsDetails				= 4;
	required uint32     recordDate 				= 5;
}
//历史血压
message r_get_health_bp_t {
    required r_get_bp maxBp = 1; //最高血压//YJ：有舒张压和收缩压，如何定义最高最低？
    required r_get_bp minBp = 2; //最低血压
    required r_get_bp avgBp = 3; //平均血压
    repeated r_get_bp bpDetails  = 4; //血压明细
    required uint32 recordDate = 5; // 记录日期
}
// 历史睡眠
message r_get_health_sleep_t {
    required uint32 startTime = 1; //睡眠开始时间
    required uint32 endTime = 2; //睡眠结束时间
    required uint32 totalMinutes = 3; //睡眠总时长
    required uint32 lightSleepMinutes  = 4; //浅睡时长
    required uint32 deepSleepMinutes = 5; // 深睡时长
	required uint32 awakeSleepMinutes = 6; // 清醒时长
	required uint32 awakeTimes = 7; // 清醒次数
	repeated r_sleep_detail_t sleepDetails = 8; // 睡眠状态明细
	required uint32     recordDate 				= 9; // 记录日期
}
// 历史血氧
message r_get_health_spo2_t {
    required uint32 maxSpo2 = 1; //最大血氧度
    required uint32 minSpo2 = 2; //最小血氧度
    repeated r_get_spo2 spo2Details = 3; //血氧度明细
    required uint32 recordDate = 4; // 记录日期
}
//----------------------------------------------

//设置天气
message set_weather_info_t{
	repeated weather_t weathers = 1;
}
//天气
message weather_t{
	required uint32 	m_weather_num 			= 1;
	required uint32		m_climate	 			= 2;
	required uint32		m_temperature	 		= 3;
	required uint32 	m_pm25		 			= 4;
	required uint32		m_aqi		 			= 5;
	required uint32		m_city			 		= 6;
	required uint32		m_max_temp				= 7;
	required uint32		m_min_temp				= 8;
	required uint32		m_seconds				= 9;
}


//恢复出厂设置
message set_reset_machine_t{
           
	required uint32 m_auth		= 1;
	required uint32 m_factory_mode		= 2;
}


//联系人信息
message sync_contacts_t{
	required bytes m_contacts_num 	= 1; //YJ：最长长度20汉字
	required string m_contacts_name  = 2;//YJ：最长长度30汉字
	required uint32 m_contacts_sos  = 3;
}
//通讯录
message set_contacts_t{
	repeated sync_contacts_t contacts = 1; 
}


//设置记步目标
message set_sport_target_t{
	required uint32 	m_target_cal			= 1;
	required uint32 	m_target_dis			= 2;
	required uint32 	m_target_step			= 3;
}


//开关设置
message sync_switch_t{
	required bytes m_switchs		= 1;
}


//设置一级页面的顺序
message get_menu_sequence_t {
    required uint32 m_type                = 1;
}

//4G在线下线状态通知
message r_get_4G_online_off_t {
	required uint32  m_online	= 1; 
	required uint32 m_time_second	= 2; 	
}



//跌倒          暂无需求
message r_set_caring_reminder_t {
    required uint32 fallReminder                = 1; //跌倒提醒
}

//血压            暂无需求
message r_get_bp {
	required uint32 sbp = 1; //收缩压
	required uint32 dbp = 2; //舒张压
	required uint32 measureTime = 3; //测量时间
}

// 通知发布健康数据。 
message set_sync_health_data_t{
	required uint32 	m_sync_type			= 1; //同步的数据类型。 步数(0)睡眠(1)心率(2)多运动记录(3)血氧(4)血压(5)
	required uint32		m_distance_today	= 2; //指定距离今天天数的数据。0代表是今天， 1代表昨天 2代表大前天
}

//设置来电转移模式和号码   暂无需求
message set_transfer_phone_t {
	required uint32 phone  = 1; //手机
}

//-------------------------------------------------------------------------------------------------------------------------------------------------


message set_update_spo2_data_t{
	required uint32 m_spo2_value 			= 1;
	required uint32 m_seconds    			= 2;
}


message r_sleep_detail_t {
	repeated uint32 sleep = 1;
}


// 血氧
message r_get_spo2 {
	required uint32 spo2 = 1; //血氧度
	required uint32 measureTime = 2; //测量时间
}


//喝水提醒
message set_drink_slot_t{
	required uint32 m_drink_slot			= 1;
	required uint32 m_start_time			= 2;
	required uint32 m_end_time				= 3;
	required uint32 m_nodisturb_start_time	= 4;
	required uint32 m_nodisturb_end_time	= 5;
}


//免打扰
message set_notdisturb_t{
	required bytes m_notdisturb_time_1	= 1;//YJ：类型是否正常？
	required bytes m_notdisturb_time_2	= 2;//YJ：类型是否正常？
}


message set_bright_times_t{
	required uint32 	m_bright_time  			= 1;
}


message r_get_hr_value_t{
	required uint32 	m_hr_value 				= 1;
	required uint32		m_err_code				= 2;
}

message set_notify_warning_t{
	required uint32 	m_notify_type		= 1;
	required uint32		m_title_len			= 2;
	required uint32		m_msg_len			= 3;
	required bytes 		m_reserved			= 4;
	required bytes 		m_title				= 5;
	required bytes 		m_msg				= 6;
	required uint32 	m_utc				= 7;

}

message sync_user_info_t{
	required uint32 m_usrid			= 1;
	required uint32 m_gender		= 2;
	required uint32 m_age			= 3;
	required uint32 m_height		= 4;
	required uint32 m_weight		= 5;
	required uint32 m_wearstyle		= 6;
}

message r_get_power_t{
	required uint32		m_err_code			= 1;
	required uint32		m_power				= 2;
}

message set_updata_fw_t{
	required uint32		m_new_version		= 1;

}

message r_get_weather_info_t {
	required uint32 m_lat = 1;
	required uint32 m_lng = 2;
}


message set_sport_status_t{
	required uint32 m_sport_mode		= 1;
	required uint32 m_sport_status		= 2;
	required uint32	m_sport_speed 		= 3;
	required float	m_sport_distance	= 4;
	required uint32 m_sport_calorie		= 5;
	required uint32 m_sport_flag		= 6;
	required uint32 m_sport_duration	= 7;
	required uint32 m_sport_second  	= 8;
}

message r_get_sport_data_t{
	required uint32 m_sport_mode		= 1;
	required uint32 m_sport_status		= 2;	
	required uint32	m_sport_step 		= 3;
	required uint32	m_sport_calorie		= 4;
	required uint32 m_sport_heart		= 5;
	
}

message set_music_info_t{
	required uint32 m_music_ctr_code		= 1;
	optional uint32 m_music_volume			= 2;
	optional bytes 	m_music_title			= 3;

}

message r_get_mtu_size_t{
	required uint32		m_err_code			= 1;
	required uint32		m_mtu				= 2;
	
}
message r_get_watch_info_t{
	required uint32		m_err_code			= 1;
	required uint32		id				= 2;
	
}
message set_bin_data_t{
	required uint32		m_sn				= 1;
	required bytes      m_data				= 2;
	
}

message set_big_data_t{
	required uint32		m_type				= 1;
	required uint32     m_data_lenth		= 2;
	required uint32     m_pic_id			= 3;
	required uint32     m_crc_code			= 4;
}


message set_rtimehr_dur_t{
	required uint32		m_hr_duration		= 1;
}

message r_rtimehr_value_t{
	required uint32		m_hr_value		= 1;

}
message r_error_code_t{
	required uint32 err = 1;
}

message r_find_phone_t{
	required uint32 m_ring_status = 1;
}
message r_get_disturb_en_t{
	required uint32 m_disturb_en = 1;
}
message r_get_step_count_t{
	required uint32 m_step_count 		= 1;
	required uint32 m_time_second		= 2;
	required uint32 m_step_calorie 		= 3;
	required uint32 m_step_distance 	= 4;
	optional uint32	m_activeduration 	= 5;

}

message r_get_current_hr_t{
  required uint32 m_current_hr 			= 1;
  optional uint32	m_cur_sport_status	= 2;

}
message r_set_light_leak_result_t{
  required uint32 m_check_result 		= 1;

}
message r_get_log_info_t{
	required uint32 m_log_length 	= 1;
	required uint32 m_log_sn 		= 2;
	required bytes m_log_data 		= 3;
}
message r_set_active_info_t{
	required uint32 m_act_start_time 	= 1;
	required uint32 m_act_end_time 		= 2;
	
}

message r_get_active_record_data_t{
	required uint32 m_count_num 			    = 1;
	required uint32 m_total_length				= 2;
	required uint32 m_active_start_second		= 3;
	required uint32 m_active_hr_count			= 4;
	required uint32 m_active_type				= 5;
	required uint32 m_active_step				= 6;
	required uint32 m_active_durations			= 7;
	required uint32 m_active_calories			= 8;
	required uint32 m_active_distance			= 9;
	required uint32 m_active_avg_hr				= 10;
	required uint32 m_active_max_hr				= 11;
	required uint32 m_burn_fat_mins				= 12;
	required uint32 m_aerobic_mins				= 13;
	required uint32 m_limit_mins				= 14;
	required uint32 m_is_effective				= 15;
	required uint32 m_magic_num					= 16;
	required uint32 m_sn						= 17;
	required bytes  m_hr_data					= 18;
	required uint32 m_active_speed				= 19;
	required uint32 m_active_swing				= 20;
	required uint32 m_active_min_hr				= 21;
	required uint32 m_active_skip_times			= 22;
	required uint32 m_active_gps_count			= 23;
	optional uint32 m_total_gps_num				= 24;

}

message r_get_ui_hrs_t{
	required uint32 m_ui_act_hr 			= 1;
	required uint32 m_ui_max_hr				= 2;
	required uint32 m_ui_min_hr				= 3;
	
}

message set_nfc_operate_t{
	
	required uint32 m_nfc_operate_code 		= 1;
	required bytes  m_nfc_data				= 2;
	required uint32 m_nfc_err_code 			= 3;
	optional uint32 m_nfc_sub_operate_code 	= 4;
	optional uint32 m_nfc_city          	= 5;
}
message set_page_switch_t{

	required uint32 m_operate_type 			= 1;
	required uint32 m_page_switch 			= 2;
}

message set_check_gps_info_t{
	required uint32 m_check_type	 		= 1;
	required uint32 m_file_num				= 2;
	required uint32 m_second				= 3;
	required uint32 m_new_version 			= 4;
	
}

message set_update_gps_data_t{
	required uint32 m_file_name				= 1;
	required uint32 m_file_length			= 2;
	required uint32		m_sn				= 3;
	required bytes      m_data				= 4;
	
}


message get_dial_config_data_t {
	required uint32 m_dial_id             = 1;
	required uint32 m_dial_width          = 2;
	required uint32 m_dial_height         = 3;
	required uint32 m_dial_form           = 4;
	required uint32 m_dial_max_size       = 5;
}

message set_warming_data_t {
	required uint32 m_type				  = 1;
	required uint32 m_min				  = 2;
	required uint32 m_max				  = 3;
}

message set_menu_sequence_t {//  
	required uint32 m_type                = 1;
	required uint32 m_count               = 2;
	required bytes  m_data                = 3;//YJ：最长长度
}


message r_get_menu_sequence_t {
    required uint32 m_type                = 1;
    required uint32 m_support             = 2;
    required uint32 m_count               = 3;
    required bytes m_data                 = 4;
}


//***********************app or fw send cmd****************
message hl_cmds {
  enum cmd_t { 
		CMD_BIND_DEVICE 			= 1;//绑定激活
	   	CMD_GET_DEVICE_INFO			= 2;//获取设备信息
	    CMD_SET_AUTH_INFO			= 3;//设置Auth
	    CMD_SYNC_USER_INFO			= 4;//同步用户信息
		CMD_SYNC_SWITCH				= 5;   
		CMD_SET_HR_SAMPLE_SLOT		= 6;//实时心率采集间隔
		CMD_SET_WATCH_SETTING	 	= 7;//设置手表设置      (0x07)
		CMD_SET_DRINK_SLOT			= 8;
		CMD_SET_ALARMS				= 9;//设置闹钟吃药提醒
		CMD_SET_NOTDISTURB			= 10;
		CMD_SET_COUNTRY_INFO		= 11;//设置时区和国家  (0x0B)
		CMD_SET_UI_STYLE			= 12;//内置表盘设置    (0x0C)
		CMD_SET_SPORT_TARGET		= 13;//设置记步目标    (0x0D)
		CMD_SET_TIME_FORMAT			= 14;//设置时间制式    (0x0E)
		CMD_SET_METRIC_INCH			= 15;//设置公英制      (0x0F)
		CMD_SET_BRIGHT_TIMES		= 16;//异常提醒
		CMD_SET_HR_WARNING			= 17;//设置心率预警值  (0x11)
		CMD_SET_ABNORMAL_WARNING	= 18;//设置异常提醒
		CMD_SET_NOTIFY_WARN			= 19;
		CMD_SET_SYNC_HEALTH_DATA	= 20;//通知发布健康数据  (0x14)
		CMD_GET_POWER_VALUE			= 21;
		CMD_SET_UPDATA_FW			= 22;
		CMD_SET_TAKE_PIC			= 23;
		CMD_SET_FIND_PHONE			= 24;
		CMD_SET_FIND_DEV			= 25;
		CMD_SET_WEATHER_INFO		= 26;//设置天气    (0x1A)
		CMD_SET_RESET_MACHINE		= 27;//恢复出厂设置  (0x1B)
		CMD_SET_SPORT_STATUS		= 28;
		CMD_GET_HEALTH_DATA			= 29;
		CMD_SET_MUSIC_INFO			= 30;
		CMD_GET_SYNC_MTU			= 31;
		CMD_SET_BIN_DATA_UPDATE		= 32;
		CMD_FACTORY_TEST_MODE		= 33;//进入厂测模式
		CMD_SEND_BIG_DATA			= 34;
		CMD_GET_REALTIME_HR			= 35;
		CMD_SYNC_REALTIME_HR		= 36;
		CMD_HAND_UP_PHONE			= 37;
		CMD_DISTURB_SWITCH			= 38;
		CMD_CTR_APP_SPORTS			= 39;
		CMD_SYNC_STEP_COUNT			= 40;
		CMD_CHECK_SPORT_STATUS		= 41;
		CMD_GET_CURRENT_SPORT_HR	= 42;
		CMD_SET_MAKE_TEST_DATA		= 43;
		CMD_SET_LIGHT_LEAK_RESULT   = 44;
		CMD_GET_ACTIVE_RECORD_DATA  = 45;
		CMD_SET_ACTIVE_RECORD_DATA  = 46;
		CMD_SET_LOG_INFO_DATA		= 47;
		CMD_GET_LOG_INFO_DATA		= 48;
		CMD_GET_UI_HRS_VALUE		= 49;
		CMD_SET_ALL_CONFIG_PARAM	= 50;//设置所有开关
		CMD_SET_NFC_OPERATE_CODE	= 51;
		CMD_SET_PAGE_SWITCH		    = 52;
		CMD_SET_CHECK_GPS_INFO		= 53;
		CMD_SET_UPDATE_GPS_DATA		= 54;
		CMD_GET_UPDATE_SPO2_DATA	= 55;
		CMD_GET_DIAL_CONFIG_DATA    = 56;
		CMD_SET_WARMING_DATA        = 57;
		CMD_SET_MENU_SEQUENCE_DATA  = 58;//	设置一级页面的顺序
		CMD_SYNC_CONTACTS           = 59;//设置通讯录、紧急联系人 (0x3B)
		CMD_GET_WATCHINFO           = 60;
		CMD_SET_CARING_REMINDER 	= 61;//设置来电转移模式和号码//YJ：命名不妥
		CMD_GET_4G_ONLINE   		= 62;
		CMD_SET_4G_ONLIND			= 63;
		CMD_SET_TRANSFER  			= 64;
		CMD_ABNORMAL_WARINING		= 65;
		CMD_ONLINE_NOTIFY		    = 68; //4G在线下线状态通知
	    CMD_ONLINE_OR_NOT		    = 69; //判断4G是否在线 (0x45)

	}
 
	required cmd_t			cmd				= 1;//cmd  
	required bool 			response		= 2;
	required uint32	 		seconds			= 3;  
	required int32	 		timezone		= 45;
	optional bytes         client_id        = 60; //YJ：最长长度

	optional set_user_info_t		set_app_info			= 4;
	optional r_bind_device_t		r_bind_device 			= 5;
	optional get_device_info_t	r_get_device_info 		= 6;	
	optional set_device_info_t		sync_phone_info 		= 7;	
	optional sync_user_info_t		sync_user_info 			= 8;
	optional sync_switch_t			sync_switch 			= 9;
	optional set_hr_sample_slot_t	set_hr_sample_slot 		= 10;
	optional set_watch_setting_t	set_watch_setting	 	= 11;
	optional set_drink_slot_t		set_drink_slot 			= 12;
	optional set_alarms_t			set_alarms 				= 13;
	optional set_notdisturb_t		set_notdisturb 			= 14;
	optional set_country_info_t		set_country_info 		= 15;
	optional set_ui_style_t 		set_ui_style 			= 16;
	optional set_sport_target_t 	set_sport_target 		= 17;
	optional set_time_format_t 		set_time_format 		= 18;
	optional set_metric_inch_t		set_metric_inch 		= 19;
	optional set_bright_times_t		set_bright_times 		= 20;
	optional set_hr_warning_t		set_set_hr_warning 		= 21;
	optional r_get_hr_value_t		r_get_hr_value 			= 22;
	optional set_notify_warning_t	set_notify_warn_info 	= 23;
	optional set_sync_health_data_t	set_health_data_info	= 24;
	optional r_get_power_t			r_get_power_value 		= 25;
	optional set_updata_fw_t		set_updata_fw 	 		= 26;
	optional set_weather_info_t		set_weather_info 	 	= 27;
	optional set_reset_machine_t	set_reset_machine 	 	= 28;
	optional set_sport_status_t		set_sport_status 	 	= 29;
	optional r_get_health_data_t	r_get_health_data 		= 30;
	optional set_music_info_t		set_music_info 			= 31;
	optional r_get_mtu_size_t		r_get_mtu_size 			= 32;
	optional set_bin_data_t			set_bin_data 			= 33;
	optional set_big_data_t			set_big_data 			= 34;
	optional r_find_phone_t			r_find_phone 			= 35;
	optional set_rtimehr_dur_t		set_hr_dur 				= 36;
	optional r_rtimehr_value_t		r_hr_value 				= 37;
	optional r_get_sport_data_t     r_get_sprot_data		= 38;
	optional r_get_disturb_en_t      r_get_disturb_en       = 39;
	optional r_get_step_count_t      r_get_step_count       = 40;
	optional r_get_current_hr_t      r_get_current_hr       = 41;
	optional r_set_light_leak_result_t   r_set_light_result = 42;
	optional r_get_active_record_data_t  r_get_active_record= 43;
	optional r_set_active_info_t		r_set_active_info 	= 44;
	optional r_get_log_info_t		r_get_log_info 			= 46;
	optional r_get_ui_hrs_t		r_get_ui_hrs 			    = 47;
	optional r_error_code_t			r_error_code 			= 48;
	optional set_nfc_operate_t	set_nfc_operate 			= 49;
	optional set_page_switch_t	set_page_switch 			= 50;
	optional set_check_gps_info_t	set_check_gps_info 		= 51;
	optional set_update_gps_data_t	set_update_gps_data 	= 52;
	optional set_update_spo2_data_t	set_update_spo2_data 	= 53;
	optional get_dial_config_data_t   get_dial_config_data  = 54;
	optional set_warming_data_t       set_warming_data      = 55;
	optional set_menu_sequence_t      set_menu_seq_data     = 56;
	optional get_menu_sequence_t      get_menu_seq_data     = 57;
	optional r_get_menu_sequence_t    r_get_menu_seq_data   = 58;
	optional r_get_weather_info_t 	  r_get_weather_info    = 59;
	optional set_contacts_t		sync_contacts_info 		    = 61;
	optional r_get_watch_info_t      r_get_watch_info       = 62;
	optional r_set_caring_reminder_t r_set_caring_reminder  = 63;
	optional set_auth_t 						 set_auth = 64;
	optional set_transfer_phone_t          set_transfer_phone     = 66;
	optional set_abnormal_warning_t          set_abnormal_warning     = 67;		
	optional r_get_4G_online_off_t          r_get_4G_online_off     = 68; //4G在线下线状态通知
}




